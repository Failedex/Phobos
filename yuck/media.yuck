
(defvar revealmediaint false)

(defwindow mediaint 
  :geometry (geometry
              :x 0 
              :y -70 
              :width "50%"
              :height 70
              :anchor "top left")
  :stacking "overlay"
  :monitor '["eDP-1", "<primary>", 0]'
  (box 
    :orientation "v"
    :space-evenly false
    :height 70
    (topleftstruct)
    (revealer 
      :halign "start"
      :reveal revealmediaint 
      :transition "slideright"
      (box 
        :orientation "v"
        :space-evenly false 
        :style "margin-right: 20px;"

        (dynamix)
        
        ;; triangle corner thing
        (box 
          :height 20
          :orientation "h"
          :space-evenly false 
          (box 
            :class "window"
            :hexpand true)
          (box 
            :orientation "v"
            :space-evenly false 
            (box 
              :class "window"
              :vexpand true)
            (box 
              :class "triangle topleft")))))))

(defvar PI 3.141592653589793238462643383279502884197169399375105820974)
(deflisten dynanim :initial "0" "python ./scripts/dynamix.py")

(defwidget dynamix []
  (box
    :class "window cont"
    :width 432
    :height 250
    :space-evenly false
    :orientation "v"
    (subbox
      :class "sub"
      :hexpand true
      (box
        :orientation "h"
        :space-evenly false
        :class "window sub"
        (transform
          :transform-origin-x "50%"
          :transform-origin-y "50%"
          :rotate {(sin(anim * (2 * PI) / 500)) + 0.2}
          (box 
            :width 150
            :height 102
            :orientation "h"
            :space-evenly false 
            :class "rcover"
            :style "background-image: url('${pcover}');"))

        (box 
          :orientation "v"
          :space-evenly false 
          :hexpand true
          :valign "center"
          :class "window sub"
          (scroll
           :hscroll true 
           :vscroll false
           :hexpand true
           (label 
             :truncate true
             :text {playerctl.song}))
          (scroll
           :hscroll true 
           :vscroll false
           :hexpand true
           (label 
             :truncate true
             :text {playerctl.artist}))
          (box 
           :orientation "h"
           :halign "center"
           :spacing 16
           (button 
             :onclick "playerctl previous"
             (image 
               :image-width 35
               :path "./assets/icons/prev.svg"))
           (button 
             :onclick "playerctl play-pause"
             (image 
               :image-width 35
               :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
           (button 
             :onclick "playerctl next"
             (image 
               :image-width 35
               :path "./assets/icons/next.svg"))))))

    (box 
      :halign "end"
      :class "trianglesub topleft large"
      :style "margin-right: 28px; margin-top: -8px;")

    (box 
      :height 150
      :orientation "h"
      :halign "start"
      :space-evenly false
      :spacing 35
      (box)
      (box
        :width 150
        (stickynote))
      (image
        :valign "end"
        :image-width 100
        :class "window cont"
        :path "./assets/LittleD/d_idle20001_${dynanim}.png")))) 
        
(defwidget stickynote []
  (transform
    :transform-origin-x "50%"
    :transform-origin-y "50%"
    :rotate -2
    (overlay
      (box 
        :halign "center"
        :valign "center"
        :width 128
        :height 128
        :class "snote"
        :orientation "v"
        :space-evenly false
        (label 
          :halign "start"
          :valign "start"
          :justify "center"
          :wrap true
          :text "Please \\ndo not \\nfeed")
        (image 
          :image-width 35
          :path "./assets/arrow.png"))
      (box 
        :halign "start"
        :valign "end"
        :style "margin: 18px 18px;"
        :class "triangle bottomleft")
      (box 
        :halign "start"
        :valign "end"
        :style "margin: 18px 18px;"
        :class "notecorner"))))

(defwidget mediawid []
 (box
   :class "window cont"
   :orientation "h"
   :space-evenly false
   :width 400
   :visible {playerctl.song != ""}
   (overlay
     (box 
       :class "pcover"
       :width 110
       :height 110
       :style "background-image: url('${pcover}');")
     (box 
       :halign "start"
       :valign "start"
       :style "margin: 4px;"
       :class "triangle topleft")
     (box 
       :halign "end"
       :valign "end"
       :style "margin: 4px;"
       :class "triangle bottomright"))
   (box 
     :orientation "v"
     :space-evenly false 
     :hexpand true
     :class "window cont"
     (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.song}))
     (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.artist}))
     (box 
       :orientation "h"
       :halign "center"
       :spacing 16
       (button 
         :onclick "playerctl previous"
         (image 
           :image-width 35
           :path "./assets/icons/prev.svg"))
       (button 
         :onclick "playerctl play-pause"
         (image 
           :image-width 35
           :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
       (button 
         :onclick "playerctl next"
         (image 
           :image-width 35
           :path "./assets/icons/next.svg"))))))

