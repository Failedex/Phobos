
(defvar revealmediaint false)

(defwindow mediaint 
  :geometry (geometry
              :x 0 
              :y -70 
              :width "50%"
              :height 70
              :anchor "top left")
  :stacking "overlay"
  :monitor '["eDP-1", "<primary>", 0]'
  (box 
    :orientation "v"
    :space-evenly false
    :height 70
    (topleftstruct)
    (revealer 
      :halign "start"
      :reveal revealmediaint 
      :transition "slideright"
      (box 
        :orientation "v"
        :space-evenly false 
        :style "margin-right: 20px;"

        (dynamix)
        
        ;; triangle corner thing
        (box 
          :height 20
          :orientation "h"
          :space-evenly false 
          (box 
            :class "window"
            :hexpand true)
          (box 
            :orientation "v"
            :space-evenly false 
            (box 
              :class "window"
              :vexpand true)
            (box 
              :class "triangle topleft")))))))

(defvar PI 3.141592653589793238462643383279502884197169399375105820974)
(deflisten dynanim :initial "0" "python ./scripts/dynamix.py")

(defwidget dynamix []
  (box
    :class "window cont"
    :width 432
    :height 250
    :space-evenly false
    :orientation "v"
    (box 
      :halign "center"
      :orientation "h"
      :space-evenly false
      :spacing 8
      (overlay
        (subbox
          :class "sub"
          (box
            :class "window sub"
            :width 200 
            :height 160))
        (box 
          :halign "end"
          :valign "end"
          :style "margin: 8px;"
          :class "trianglesub large bottomright")
        (transform
          :transform-origin-x "50%"
          :transform-origin-y "50%"
          :rotate {(sin(anim * (2 * PI) / 500)) + 0.2}
          (box 
            :width 200
            :height 200
            :orientation "h"
            :space-evenly false 
            :class "rcover"
            :style "background-image: url('${pcover}');")))
      (box 
        :halign "center"
        :class "trianglesub topleft large"
        :valign "end"
        :style "margin-left: -16px; margin-bottom: 8px;")
      (image
        :valign "end"
        :image-width 100
        :class "window cont"
        :path "./assets/LittleD/d_idle20001_${dynanim}.png")) 
        
    (box 
      :orientation "v"
      :space-evenly false 
      :hexpand true
      :class "window cont"
      (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.song}))
      (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.artist}))
      (box 
       :orientation "h"
       :halign "center"
       :spacing 16
       (button 
         :onclick "playerctl previous"
         (image 
           :image-width 35
           :path "./assets/icons/prev.svg"))
       (button 
         :onclick "playerctl play-pause"
         (image 
           :image-width 35
           :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
       (button 
         :onclick "playerctl next"
         (image 
           :image-width 35
           :path "./assets/icons/next.svg"))))))
    

(defwidget mediawid []
 (box
   :class "window cont"
   :orientation "h"
   :space-evenly false
   :width 400
   :visible {playerctl.song != ""}
   (overlay
     (box 
       :class "pcover"
       :width 110
       :height 110
       :style "background-image: url('${pcover}');")
     (box 
       :halign "start"
       :valign "start"
       :style "margin: 4px;"
       :class "triangle topleft")
     (box 
       :halign "end"
       :valign "end"
       :style "margin: 4px;"
       :class "triangle bottomright"))
   (box 
     :orientation "v"
     :space-evenly false 
     :hexpand true
     :class "window cont"
     (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.song}))
     (scroll
       :hscroll true 
       :vscroll false
       :hexpand true
       (label 
         :truncate true
         :text {playerctl.artist}))
     (box 
       :orientation "h"
       :halign "center"
       :spacing 16
       (button 
         :onclick "playerctl previous"
         (image 
           :image-width 35
           :path "./assets/icons/prev.svg"))
       (button 
         :onclick "playerctl play-pause"
         (image 
           :image-width 35
           :path "./assets/icons/${playerctl.status == 'Playing' ? 'pause' : 'play'}.svg"))
       (button 
         :onclick "playerctl next"
         (image 
           :image-width 35
           :path "./assets/icons/next.svg"))))))

